# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import rpc_pb2 as rpc__pb2


class StockBazaarStub(object):
    """Stock Bazaar Service Definiton
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Lookup = channel.unary_unary(
                '/StockBazaar/Lookup',
                request_serializer=rpc__pb2.stockLookupMessage.SerializeToString,
                response_deserializer=rpc__pb2.stockLookupResponseMessage.FromString,
                )
        self.Trade = channel.unary_unary(
                '/StockBazaar/Trade',
                request_serializer=rpc__pb2.stockTradeRequestMessage.SerializeToString,
                response_deserializer=rpc__pb2.stockTradeResponseMessage.FromString,
                )
        self.Update = channel.unary_unary(
                '/StockBazaar/Update',
                request_serializer=rpc__pb2.stockUpdateRequestMessage.SerializeToString,
                response_deserializer=rpc__pb2.stockUpdateResponseMessage.FromString,
                )


class StockBazaarServicer(object):
    """Stock Bazaar Service Definiton
    """

    def Lookup(self, request, context):
        """Stock Lookup method 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Trade(self, request, context):
        """Stock Trade method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Stock Update Method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StockBazaarServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Lookup': grpc.unary_unary_rpc_method_handler(
                    servicer.Lookup,
                    request_deserializer=rpc__pb2.stockLookupMessage.FromString,
                    response_serializer=rpc__pb2.stockLookupResponseMessage.SerializeToString,
            ),
            'Trade': grpc.unary_unary_rpc_method_handler(
                    servicer.Trade,
                    request_deserializer=rpc__pb2.stockTradeRequestMessage.FromString,
                    response_serializer=rpc__pb2.stockTradeResponseMessage.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=rpc__pb2.stockUpdateRequestMessage.FromString,
                    response_serializer=rpc__pb2.stockUpdateResponseMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StockBazaar', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StockBazaar(object):
    """Stock Bazaar Service Definiton
    """

    @staticmethod
    def Lookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StockBazaar/Lookup',
            rpc__pb2.stockLookupMessage.SerializeToString,
            rpc__pb2.stockLookupResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Trade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StockBazaar/Trade',
            rpc__pb2.stockTradeRequestMessage.SerializeToString,
            rpc__pb2.stockTradeResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StockBazaar/Update',
            rpc__pb2.stockUpdateRequestMessage.SerializeToString,
            rpc__pb2.stockUpdateResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
